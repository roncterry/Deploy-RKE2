source ../deploy_rke2.cfg

############################################################################
#   Observability Agent Variables
############################################################################

# Namspace that will Contain the Observability Agent
#
export OBSERVABILITY_NAMESPACE=suse-observability


# FQDN of the SUSE Observability
#
export OBSERVABILITY_HOST=observability.${DOMAIN_NAME}


# Observability OTLP GRPC host
#
# Host the collector sends data to via GRPC.
#
# Note: This must resolve to the IP address of the Observability host and an 
# ingress must be configured in the Observability cluster for this host.
#
# Default: otlp-observability.${DOMAIN_NAME}
#
export OBSERVABILITY_OTLP_HOST=otlp-observability.${DOMAIN_NAME}


# Observability OTLP GRPC over HTTP host
#
# Host the collector sends data to via GRPC over HTTP.
#
# Note: This must resolve to the IP address of the Observability host and an 
# ingress must be configured in the Observability cluster for this host.
#
# Default: otlp-http-observability.${DOMAIN_NAME}
#
export OBSERVABILITY_OTLP_HTTP_HOST=otlp-http-observability.${DOMAIN_NAME}


# Observability OTLP Ingress Port
#
# Default: 80
#
export OBSERVABILITY_OTLP_INGRESS_PORT=80


# URL of the Observability Agent Helm Repository
#
export OBSERVABILITY_HELM_REPO_URL=https://charts.rancher.com/server-charts/prime/suse-observability


# Observability API Key
#
# Can be found in the 'baseConfig_values.yaml' file used when installing the 
# SUSE Observability cluster.
#  Key: stackstate.apiKey.key
#
# That file what created when the 'helm template' command was run before
# installing the Observability Helm chart.
#
export OBSERVABILITY_INSTALLATION_API_KEY=


# Observability Service Token
#
# Service Token created when a StackPack instance for the cluster was created.
# Used when installing the agent into the AI cluster.
#
# The service token can be located immediately after the new instance is 
# created here:
#
#   Hamburger menu (top Left) 
#         --> StackPacks 
#              --> Kubernetes 
#                   --> <INSTANCE_NAME>
#                        --> Instance Credentials 
#                             --> API Key (after clicking this button)
#
# It will be used in the "helm upgrade --install" command listed under:
#
#   Hamburger menu (top Left) 
#         --> StackPacks 
#              --> Kubernetes 
#                   --> <INSTANCE_NAME>
#                        --> Generic Kubernetes (including RKE2)
#                             --> Step 2
#                                    helm upgrade --install \
#                                    ...
#                 (This line --->)   --set-string 'stackstate.apiKey'=
#                                    ...
# (Replaces the text SERVICE_TOKEN in the stackstate.apiKey value)
#
export OBSERVABILITY_SERVICE_TOKEN=


############################################################################
#   OpenTelemetry Collector Variables
############################################################################

# Version of OpenTelemetry Collector to Install
#
# If left empty the latest version will be installed.
#
export OTEL_VERSION=


# URL of the OpenTelemetry Collector Helm Repository
#
# Upstream Repo: https://open-telemetry.github.io/opentelemetry-helm-charts
#
export OTEL_HELM_REPO=https://open-telemetry.github.io/opentelemetry-helm-charts


# OopenTelemetry Helm Chart
#
# If this variable is set then the OTEL_HELM_REPO is ignored and 
# this chart is used to install OpenTelemetry instead.
#
# AppCo Chart:oci://dp.apps.rancher.io/charts/opentelemetry-collector
#
export OTEL_HELM_CHART=oci://dp.apps.rancher.io/charts/opentelemetry-collector


# Namspace that Will Contain OpenTelemetry Collector
#
export OTEL_NAMESPACE=opentelemetry-collector


# Milvus Service Name
#
# The service name create for Milvus when it was deployed.
#
# If Milvus is deployed using the milvus helm chart then it will be: milvus
#
# However if Milvus is deployed by the suse-ai-deployer chart it 
# will be: <SUSE_AI_NAMESPACE>-milvus
#
# Default: milvus
#
export OTEL_MILVUS_SERVICE_NAME=milvus


