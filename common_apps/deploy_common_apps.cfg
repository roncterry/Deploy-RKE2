source ../deploy_rke2.cfg

############################################################################
#   SUSE Storage (Longhorn) Variables
############################################################################

# URL of the Longhorn Helm Repository
#
# The upstream repo is: https://charts.longhorn.io
#
export LH_HELM_REPO_URL=https://charts.longhorn.io


# Longhorn Helm Chart
#
# If this variable is set then the LONGHORN_HELM_REPO is ignored and 
# this chart is used to install Longhorn instead.
#
# The AppCo chart is: oci://dp.apps.rancher.io/charts/suse-storage
#
export LH_HELM_CHART=


# Version of Longhorn to Install
#
# If left empty the latest version will be installed.
#
export LH_VERSION=


# Username for the Longhorn Admin User
#
export LH_USER="admin"


# Password for the Longhorn Admin User
#
export LH_PASSWORD="longhorn"


# URL to Access the Longhorn Web UI If Configuring an Ingress
#
export LH_URL="${CLUSTER_NAME}-longhorn.${DOMAIN_NAME}"


# Number of Replicas of Longhorn Service Pods
#
# This typically is set to the number of cluster nodes in the Longhorn cluster.
# For example, if you have a single node cluster this should be set to: 1
#
# This is used for the following Helm chart values:
#   defaultSettings:defaultReplicaCount
#
# Default: 3
#
export LH_DEFAULT_REPLICA_COUNT=1


# The Number of Volume Replicas in the Default Storage Class
#
# When the defualt storage class is created (default name: longhorn) when
# Longhorn is deployed, this is the default number of volume replicas that
# will be defined in that storage class.
#
# This is typically set to the number of cluster nodes if less than 3.
# For example, if you have a single node cluster this should be set to: 1
#
# This is used for the following Helm chart values:
#   persistence:defaultClassReplicaCount
#
# Default: 3
#
export LH_DEFAULT_CLASS_REPLICA_COUNT=1


# The Number of CSI Service Pods
#
# This typically is set to the number of cluster nodes in the Longhorn cluster.
# For example, if you have a single node cluster this should be set to: 1
#
# This is used for the following Helm chart values:
#    csi:attacherReplicaCount
#    csi:provisionerReplicaCount
#    csi:resizerReplicaCount
#    csi:snapshotterReplicaCount
#
# Default: 3
#
export LH_CSI_REPLICA_COUNT=1


# The Percentage of the Default Disk that is Not to Be Allocated
#
# This defines the percentage of the default disk that will not be allocated
# for use as Longhorn storage.
#
# For example, if you have a 1TB disk and if your root volume (/) is 850GB and 
# the percentage is set to 30, only roughly 550GB will be used for Longhorn 
# storage leaving roughly 250GB for use by other things (OS, etc.).
#
# If the first disk is the same disk that your OS is installed on you might 
# want to watch this. However if that disk in 1TB, 30 is probably a little too 
# much to reserve. You might consider setting this to a lower value like 20 or 
# even 15.
#
# This is used for the following Helm chart values:
#   defaultSettings:storageReservedPercentageForDefaultDisk
#
# Default: 30
#
export LH_RESERVED_DISK_PERCENTAGE=15


# Default Storage Class File System Type
#
# The file system type used in the default Storage Class is explicitly 
# defined by this variable. The default vallue in the chart is ext4 however 
# there are times when somthing like XFS would be better.
#
# !----This value must be set----!
# (If in doubt set it to: ext4)
#
# Default: ext4
#
export LH_DEFAULT_SC_FS_TYPE=ext4


# List of additional storage classes to create
#
# If you need storage class(es) that use a different file system and/or 
# replica count than the default Longhorn storage class you can list them 
# in this variable and a new storage class will be created for each 
# one listed. 
#
# Note: Only file systems supported by Longhorn can be listed
#
# Currently supported file systems: ext4 xfs
#
# Space-delimited list of comma delimited lists
#
# Format: <NAME>,<FS_TYPE>,<REPLICAS>
#
# Example: longhorn-xfs,xfs,1 longhorn-ext4,ext4,3 
#
# Ths example would create:
#  -an additional storage class using XFS as the file system with 1 replica
#   named: longhorn-xfs
#  -an additional storage class using EXT4 as the file system with 3 replicas
#   named: longhorn-ext4
#
export LH_ADDITIONAL_SC_LIST=


############################################################################
#   Cert-Manager Variables
############################################################################

# Cert-Manager Helm Install URL
# 
# The Helm repo to install Cert-Manager from.
#
# The upstream repo is: https://charts.jetstack.io
#
export CERTMANAGER_HELM_REPO="https://charts.jetstack.io"


# Cert-Manager Helm Chart
#
# If this variable is set then the CERTMANAGER_HELM_REPO is ignored and 
# this chart is used to install Cert-Manager instead.
#
# The AppCo chart is: oci://dp.apps.rancher.io/charts/cert-manager
#
export CERTMANAGER_HELM_CHART=


# Version of Cert-Manager to Install
#
# If left empty the latest version will be installed.
#
export CERTMANAGER_VERSION=


# Namespace to install Cert-Manager into
#
export CERTMANAGER_NAMESPACE=cert-manager


############################################################################
#   NVIDIA GPU Operator Variables
############################################################################

# URL of the NVIDIA GPU Operator Helm Repository
#
export NVIDIA_GPU_OPERATOR_REPO_URL=https://helm.ngc.nvidia.com/nvidia


# Enable the Operator Validator
#
# Default: True
#
export NVIDIA_OPERATOR_VALIDATOR_ENABLED=True


# Enable the Datacenter GPU Manager Service
#
# Default: False
#
export NVIDIA_GPU_ENABLE_DCGM=False


# How many times to check if a pod is running
#
# How many times to check if a pod is running before deleting the pod so that 
# it can be recreated.
#
# Default: 15
#
export NVIDIA_POD_RUNNING_CHECK_COUNT_MAX=15


# How many time to reste a pod before exiting
#
# How many times to delete and recreate a pod before exiting the script.
#
# Default: 2
#
NVIDIA_POD_RESET_COUNT_MAX=2


# Number of Replicas to Timeslice the GPU Into
#
# If set to larger than 1 the GPU is time sliced into the number of replicas
# specified and the number of visible GPUs will equal the number of replicas.
#
# Default: 1
#
export NVIDIA_GPU_TIMESLICE_REPLICAS=1


